[{"/Users/stephaniemelo/Documents/GitHub/taller1/src/index.tsx":"1","/Users/stephaniemelo/Documents/GitHub/taller1/src/reportWebVitals.ts":"2","/Users/stephaniemelo/Documents/GitHub/taller1/src/Components/App/App.tsx":"3","/Users/stephaniemelo/Documents/GitHub/taller1/src/Components/Festival/Festival.tsx":"4","/Users/stephaniemelo/Documents/GitHub/taller1/src/Components/Header/Header.tsx":"5","/Users/stephaniemelo/Documents/GitHub/taller1/src/Components/ProducerForm/ProducerForm.tsx":"6","/Users/stephaniemelo/Documents/GitHub/taller1/src/Components/ShortsForm/ShortsForm.tsx":"7","/Users/stephaniemelo/Documents/GitHub/taller1/src/Components/Producer/ProducerElem.tsx":"8","/Users/stephaniemelo/Documents/GitHub/taller1/src/Components/Shorts/ShortsElem.tsx":"9","/Users/stephaniemelo/Documents/GitHub/taller1/src/Components/Festival/FestivalForm.tsx":"10","/Users/stephaniemelo/Documents/GitHub/taller1/src/Utils/GetReviewNum.ts":"11","/Users/stephaniemelo/Documents/GitHub/taller1/src/Components/Header/Links/Links.tsx":"12"},{"size":515,"mtime":1635228776000,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":1635228776000,"results":"15","hashOfConfig":"14"},{"size":6831,"mtime":1635785573417,"results":"16","hashOfConfig":"14"},{"size":1536,"mtime":1635315250000,"results":"17","hashOfConfig":"14"},{"size":474,"mtime":1635565778582,"results":"18","hashOfConfig":"14"},{"size":3957,"mtime":1635548912314,"results":"19","hashOfConfig":"14"},{"size":5030,"mtime":1635567333143,"results":"20","hashOfConfig":"14"},{"size":2101,"mtime":1635782452170,"results":"21","hashOfConfig":"14"},{"size":3502,"mtime":1635910879605,"results":"22","hashOfConfig":"14"},{"size":2393,"mtime":1635551012835,"results":"23","hashOfConfig":"14"},{"size":471,"mtime":1635785886396,"results":"24","hashOfConfig":"14"},{"size":1195,"mtime":1635566018521,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"106dxcp",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"28"},"/Users/stephaniemelo/Documents/GitHub/taller1/src/index.tsx",[],["58","59"],"/Users/stephaniemelo/Documents/GitHub/taller1/src/reportWebVitals.ts",[],"/Users/stephaniemelo/Documents/GitHub/taller1/src/Components/App/App.tsx",["60","61","62","63"],"import React from 'react';\nimport Header from '../Header/Header';\nimport ShortsForm from '../ShortsForm/ShortsForm';\nimport ShortsElem, { /*ShortsElemProps*/ } from '../Shorts/ShortsElem';\nimport FestivalElem from '../Festival/Festival';\nimport FestivalForm from '../Festival/FestivalForm';\nimport { ShortElemObj } from '../../Types/ShortElemObj';\nimport { ProducerElemObj } from '../../Types/ProducerElemObj';\n//import { GetReviewNum } from '../../Utils/GetReviewNum';\nimport ProducerForm from '../ProducerForm/ProducerForm';\nimport ProducerElem, { ProducerElemProps } from '../Producer/ProducerElem';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Route,\n  HashRouter,\n  Switch,\n} from \"react-router-dom\";\nimport { FestivalElemObj } from '../../Types/FestivalElemObj';\n\n\n\nfunction App() {\n\n  const [formType, setFormType] = React.useState<'create' | 'edit'>('create');\n  const [editId, setEditId] = React.useState<number | null>(null);\n  const [producerElems,setProducerElems] = React.useState<ProducerElemObj[]>([\n   {\n     id:0,\n     firstname: 'Stephy',\n     lastname: 'Melo',\n     role: 'Director Malo',\n     backgroundimg: 'asadw',\n     profileimg:'adwdq'\n    } \n\n  ]);\n\n  \n  \n  const [shortElems, setShortElems] = React.useState<ShortElemObj[]>([\n    {\n      id: 0,\n      coverimg: 'adasdas',\n      genre: 'Comedy',\n      year: 2020,\n      description: 'Shrek is an anti-social and highly-territorial green ogre who loves the solitude of his swamp. His life is interrupted after the dwarfish Lord Farquaad of Duloc unknowingly exiles a vast number of fairy-tale creatures to Shreks swamp. Angered by the intrusion, he decides to visit Farquaad and demand they be moved elsewhere. He reluctantly allows the talkative Donkey, who was exiled as well, to tag along and guide him to Duloc. Meanwhile, Farquaad is presented with Snow Whites Magic Mirror, who tells him that in order to become a true king, he must marry a princess',\n      title: 'Skins',\n      review: [1, 1, 2, 3, 5, 4, 2, 1, 3, 4],\n      producerID: '0',\n      producerName: 'Stephy',\n      festivals: [\n        {\n          id: 0,\n          title: \"Sundance\",\n          season: \"Winter\",\n          award: \"Best Film\"\n        }\n      ]\n    },\n  ]);\n\n  const handleCreate = (newShortElem: { title: string, genre: string, year: number, coverimg: string, description: string, producerName: string | undefined, producerID: string | undefined}) => {\n    const newArray = [\n      ...shortElems,\n      {\n        id: Math.random(),\n        title: newShortElem.title,\n        genre: newShortElem.genre,\n        year: newShortElem.year,\n        coverimg: newShortElem.coverimg,\n        description: newShortElem.description,\n        producerID: newShortElem.producerID,\n        producerName: newShortElem.producerName,\n        review: [],\n        festivals: []\n      }\n    ];\n    setShortElems(newArray);\n  }\n\n  // const [producerElems, setProducerElems] = React.useState<ProducerElemProps[]>([])\n\n  const handleCreateProducer = (newProducer: ProducerElemObj ) => {\n    const newArray = [\n      ...producerElems,\n      {\n        id: Math.random(),\n        firstname: newProducer.firstname,\n        lastname: newProducer.lastname,\n        role: newProducer.role,\n        profileimg: newProducer.profileimg,\n        backgroundimg: newProducer.backgroundimg,\n\n      }\n    ];\n    setProducerElems(newArray);\n  }\n\n\n\n\n  /// Borrar elemento de Short\n\n  const handleDelete = (deleteId: number) => {\n\n    const shortElemsCopy = shortElems.filter((elem) => {\n      if (elem.id === deleteId) {\n        return false;\n      } else {\n        return true;\n      }\n    });\n    setShortElems(shortElemsCopy);\n  }\n\n\n  /// Editar Short\n  const handleEdit = (editId: number, editShortElem: { title: string }) => {\n    console.log(editId, editShortElem);\n\n    const shortElemsCopy = shortElems.slice();\n    const editIndex = shortElems.findIndex((elem) => {\n      if (elem.id === editId) {\n        return true;\n      }\n      return false;\n    });\n    shortElemsCopy[editIndex] = {\n      ...shortElems[editIndex],\n      ...editShortElem,\n    }\n\n    setShortElems(shortElemsCopy);\n  }\n\n  const handleBeginEdit = (editId: number) => {\n    setEditId(editId);\n    setFormType('edit');\n  }\n\n\n  const handleCreateFestival = (shortElemId: number, newFestivalElem: FestivalElemObj) => {\n    console.log({shortElemId});\n    console.log({newFestivalElem})\n    const shortElemCopy = shortElems.slice();\n    const editIndex = shortElems.findIndex((elem) => {\n      if (elem.id === shortElemId) {\n        return true;\n      }\n      return false;\n    });\n\n    shortElemCopy[editIndex] = {\n      ...shortElems[editIndex],\n      festivals: [\n        ...shortElems[editIndex].festivals,\n        newFestivalElem\n      ]\n    }\n\n    setShortElems(shortElemCopy);\n  }\n\n\n\n\n\n\n  return (\n    <div>\n      <HashRouter>\n        <Header />\n        <Switch>\n          <Route path=\"/createShortfilms\">\n            <div><ShortsForm\n              editId={editId}\n              type={formType}\n              onCreate={handleCreate}\n              onEdit={handleEdit}\n              producerElems={producerElems}\n               />\n            </div>\n\n          </Route>\n\n          <Route path=\"/shortfilms\">\n            {shortElems.map((elem) => {\n              return <ShortsElem key={elem.id} {...elem} onDelete={handleDelete} type=\"edit\"\n                onEdit={handleBeginEdit} />;\n            })}\n          </Route>\n        //productor\n          <Route path=\"/producer\">\n            {\n              producerElems.map((elem) => {\n                return <ProducerElem\n                  key={elem.id}\n                  id={elem.id}\n                  firstname={elem.firstname}\n                  lastname={elem.lastname}\n                  role={elem.role}\n                  profileimg={elem.profileimg}\n                  backgroundimg={elem.backgroundimg}\n                  shortFims={shortElems}\n                />;\n              })\n            }\n\n          </Route>\n\n          <Route path=\"/createProducer\">\n            <div>\n              <div>\n                <ProducerForm\n                  onCreate={handleCreateProducer}\n                />\n              </div>\n            </div>\n            { }\n\n          </Route>\n\n\n          <Route exact={true} path=\"/festivals/:id\">\n            <div>\n              <h2>Festival</h2>\n              <FestivalElem\n                list={shortElems}\n                onCreateFestival={handleCreateFestival}\n              />\n            </div>\n          </Route>\n\n          <Route path='/404' exact={true}  >\n            {\n              <div>\n                <h2>Error 404</h2>\n                <p>Some error occurred, please try again.</p>\n              </div>\n\n            }\n          </Route>\n\n        </Switch>\n\n      </HashRouter>\n    </div >\n\n\n  );\n}\n\n\n\nexport default App;\n","/Users/stephaniemelo/Documents/GitHub/taller1/src/Components/Festival/Festival.tsx",[],"/Users/stephaniemelo/Documents/GitHub/taller1/src/Components/Header/Header.tsx",["64"],"import React from \"react\";\nimport  Links  from './Links/Links';\nimport logo from '../Images/logo.png';\nimport './Header.css'\n\ninterface HeaderProps {\n\n}\n\nconst Header: React.FC<HeaderProps> = ({ }) => {\n\n    return <header className=\"headerApp\">\n        <div className=\"logoContainer\">\n        <img className=\"logo\" src={logo} alt=\"logo\" />\n        </div>\n        <div> <Links/></div> \n        <div className=\"linediv\"></div>\n       \n    </header>;\n}\n\nexport default Header;","/Users/stephaniemelo/Documents/GitHub/taller1/src/Components/ProducerForm/ProducerForm.tsx",["65","66"],"import * as React from 'react';\nimport { ProducerElemProps } from '../Producer/ProducerElem';\nimport './ProducerForm.css';\n\ninterface ProducerElemFormProps {\n    onCreate: (newProducer: {\n        id: number,\n        firstname: string,\n        lastname: string,\n        role: string,\n        profileimg: string,\n        backgroundimg: string\n    }) => void;\n\n}\n\nconst ProducerForm: React.FC<ProducerElemFormProps> = ({ onCreate }) => {\n\n\n    const [formSubmitted, setFormSubmitted] = React.useState(false);\n\n\n\n    const [firstname, setFirstName] = React.useState('');\n    const handleFirstNameChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n        setFirstName(event.target.value);\n    }\n\n    const [lastname, setLastName] = React.useState('');\n    const handleLastNameChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n        setLastName(event.target.value);\n    }\n\n\n    const [role, setRole] = React.useState('');\n    const handleRoleChange: React.ChangeEventHandler<HTMLSelectElement> = (event) => {\n        setRole(event.target.value);\n    }\n\n\n\n    const [profileimg, setProfileimg] = React.useState('');\n    const handleProfileChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n        console.log(event);\n        setProfileimg(event.target.value);\n\n    }\n\n    const [backgroundimg, setBackgroundimg] = React.useState('');\n    const handleBackgroundimg: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n        setBackgroundimg(event.target.value);\n    }\n\n\n\n    const isNameValid = firstname.length >= 5\n\n\n\n    const handleSubmit: React.FormEventHandler<HTMLFormElement> = (event: any) => {\n        event.preventDefault();\n        setFormSubmitted(true);\n        if (isNameValid) {\n            console.log('valid');\n\n\n            onCreate({\n                id: Math.random(),\n                firstname: firstname,\n                lastname: lastname,\n                role: role,\n                profileimg: profileimg,\n                backgroundimg: backgroundimg\n\n\n            });\n        } else {\n            console.log('invalid');\n        }\n    }\n\n\n\n\n\n\n    return (\n\n        <form className=\"producerForm\" onSubmit={handleSubmit}>\n            <h2>Create profile</h2>\n            <div className=\"nameDiv\">\n                <div className=\"nameDiv__1\">\n                    <label>First name</label>\n                    <input type=\"text\"\n                        onChange={handleFirstNameChange}\n                        value={firstname} />\n                    {(formSubmitted && !isNameValid) &&\n                        <p className=\"ProducerFormElem__error\">Name must be at least 5 characters long</p>\n                    }\n                </div>\n\n                <div className=\"nameDiv__2\">\n                    <label>Last name</label>\n                    <input type=\"text\"\n                        onChange={handleLastNameChange}\n                        value={lastname} />\n                </div>\n            </div>\n\n            <label>Role</label>\n\n            <select value={role} onChange={handleRoleChange}>\n                <option value=\"director\">Director</option>\n                <option value=\"producer\">Producer</option>\n                <option value=\"screenwriter\">Screenwriter</option>\n            </select>\n\n            <label>Add profile</label>\n            <input multiple accept=\".jpg,.png,.webp,.jfif\" name=\"file\" type=\"file\" alt=\"profile\"\n                onChange={handleProfileChange}\n                value={profileimg} />\n\n\n            <label>Add background cover</label>\n            <input multiple accept=\".jpg,.png,.webp,.jfif\" name=\"file\" type=\"file\" alt=\"bg\"\n                onChange={handleBackgroundimg}\n                value={backgroundimg} />\n\n\n\n            <button>\n                Create\n            </button>\n\n\n\n\n\n        </form>);\n}\n\n\n\nexport default ProducerForm;\n\nfunction setIsSelected(arg0: boolean) {\n    throw new Error('Function not implemented.');\n}\n","/Users/stephaniemelo/Documents/GitHub/taller1/src/Components/ShortsForm/ShortsForm.tsx",["67","68"],"import * as React from 'react';\nimport { ShortsElemProps } from '../Shorts/ShortsElem';\nimport { useHistory } from 'react-router';\n\nimport './ShortsForm.css';\nimport { ProducerElemProps } from '../Producer/ProducerElem';\n\ninterface ShortElemFormProps {\n    editId: number | null;\n    type: 'create' | 'edit';\n    onCreate: (newShort: { title: string, genre: string, year: number, description: string, coverimg: string, producerName: string | undefined, producerID: string | undefined }) => void;\n    onEdit: (id: number, editMusicElem: { title: string }) => void;\n    producerElems: ProducerElemProps[];\n}\n\nconst ShortsForm: React.FC<ShortElemFormProps> = ({ editId, type, onCreate, onEdit, producerElems }) => {\n    const history = useHistory();\n\n\n\n    const [formSubmitted, setFormSubmitted] = React.useState(false);\n\n\n\n    const [title, setTitle] = React.useState('');\n    const handleTitleChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n        setTitle(event.target.value);\n    }\n\n    const [genre, setGenre] = React.useState('');\n    const handleGenreChange: React.ChangeEventHandler<HTMLSelectElement> = (event) => {\n        setGenre(event.target.value);\n    }\n\n    const [coverimg, setCoverimg] = React.useState('');\n    const handleCoverimg: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n        setCoverimg(event.target.value);\n    }\n\n\n    const [year, setYear] = React.useState(0);\n    const handleYearChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n        setYear(Number.parseInt(event.target.value));\n    }\n\n    const [description, setDescription] = React.useState('');\n    const handleDescriptionChange: React.ChangeEventHandler<HTMLTextAreaElement> = (event) => {\n        setDescription(event.target.value);\n    }\n\n    const [producer, setProducer] = React.useState({ producerName: \"\", producerID: \"\" });\n    const handleProducer: React.ChangeEventHandler<HTMLSelectElement> = (event) => {\n        setProducer({ producerName: event.target.innerText, producerID: event.target.value });\n        console.log(producer)\n    }\n\n\n\n\n\n\n    \n\n\n    const handleSubmit: React.FormEventHandler<HTMLFormElement> = (event: any) => {\n        event.preventDefault();\n        setFormSubmitted(true);\n        if (type === 'create') {\n            console.log('valid');\n\n            console.log({ producer });\n\n            onCreate({\n                title: title,\n                genre: genre,\n                year: year,\n                coverimg: \"string\",\n                description: description,\n                producerID: producer.producerID,\n                producerName: producer.producerName\n            });\n            history.push('/shortfilms');\n\n        } else if (type === 'edit' ) {\n            onEdit(editId!, { title: title });\n        } else {\n            console.log('invalid');\n        }\n    }\n\n\n\n    const date = new Date();\n\n\n\n    return (\n\n        <form className=\"shortsForm\" onSubmit={handleSubmit}>\n\n\n\n\n            <h2>{type === 'create' ? 'New' : 'Edit'} Shortfilm {editId}</h2>\n\n\n            {type === 'create' && <><label>Title</label><input type=\"text\"\n                onChange={handleTitleChange}\n                value={title} /></>\n\n            }\n\n            <div className=\"inputDiv\">\n\n                <div className=\"inputDiv__1\">\n                    <label>Year</label>\n                    <input type=\"number\" min={1900} max={date.getFullYear()}\n                        onChange={handleYearChange}\n                        value={year} />\n                </div>\n                <div className=\"inputDiv__2\">\n                    <label>Genre</label>\n                    <select value={genre} onChange={handleGenreChange}>\n                        <option value=\"comedy\">Comedy</option>\n                        <option value=\"drama\">Drama</option>\n                        <option value=\"suspense\">Suspense</option>\n                        <option value=\"romance\">Romance</option>\n                    </select>\n                </div>\n            </div>\n\n            <label>Description</label>\n            <textarea className=\"descripInput\" rows={4} cols={50}\n                onChange={handleDescriptionChange}\n                value={description} />\n\n            <label>Add cover image</label>\n            <input multiple accept=\".jpg,.png,.webp,.jfif\" name=\"file\" type=\"file\" alt=\"bg\"\n                onChange={handleCoverimg}\n                value={coverimg} />\n\n            <label>Add Producer</label>\n            <select name=\"producers\" onChange={handleProducer}>\n                <option value=\"none\">Select option</option>\n                {\n                    producerElems.map(producer => {\n                        return <option value={producer.id} className={producer.firstname}>{producer.firstname}</option>\n                    })\n                }\n            </select>\n\n            <button>\n                {type === 'create' ? 'Create new Shortfilm' : 'Save changes'}\n            </button>\n        </form>);\n}\n\n\n\nexport default ShortsForm;\n\n\n","/Users/stephaniemelo/Documents/GitHub/taller1/src/Components/Producer/ProducerElem.tsx",[],"/Users/stephaniemelo/Documents/GitHub/taller1/src/Components/Shorts/ShortsElem.tsx",["69","70","71"],"/Users/stephaniemelo/Documents/GitHub/taller1/src/Components/Festival/FestivalForm.tsx",["72","73"],"import * as React from 'react';\nimport { useHistory } from 'react-router';\nimport { FestivalElemObj } from '../../Types/FestivalElemObj';\n\ninterface FestivalFormProps {\n    onCreateFestival: (shortElemId: number, newFestivalElem: FestivalElemObj) => void;\n    shortElemId: number;\n}\n\n\n\nconst FestivalForm: React.FC<FestivalFormProps> = ({ onCreateFestival, shortElemId }) => {\n    const history = useHistory();\n\n    const [title, setTitle] = React.useState('');\n    const handleTitleChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n        setTitle(event.target.value);\n    }\n\n    const [season, setSeason] = React.useState('');\n    const handleSeasonChange: React.ChangeEventHandler<HTMLSelectElement> = (event) => {\n        setSeason(event.target.value);\n    }\n    const [award, setAward] = React.useState('');\n    const handleAwardChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n        setAward(event.target.value);\n    }\n\n    const isSeasonValid = season.length >= 5\n\n\n\n    const handleSubmit: React.FormEventHandler<HTMLFormElement> = (event) => {\n        event.preventDefault();\n\n\n        const newFestivalElem: FestivalElemObj = {\n            id: Math.random(),\n            title: title,\n            season: season,\n            award: award,\n\n        }\n\n        console.log({newFestivalElem})\n        onCreateFestival(shortElemId,newFestivalElem);\n        //history.goBack();\n\n\n\n    }\n\n    return (<div>\n        <form className=\"festivalForm\" onSubmit={handleSubmit}>\n            <h2>Add a festival</h2>\n            <label>Festival Title</label>\n            <input\n                type=\"text\"\n                onChange={handleTitleChange}\n                value={title}\n            />\n           \n            <label>Season</label>\n\n            <select value={season} onChange={handleSeasonChange}>\n                <option value=\"winter\">Winter</option>\n                <option value=\"spring\">Spring</option>\n                <option value=\"summer\">Summer</option>\n                <option value=\"fall\">Fall</option>\n            </select>\n            \n            <label>Award</label>\n            <input\n                type=\"text\"\n                onChange={handleAwardChange}\n                value={title}\n            />\n            <button>\n                Add festival\n            </button>\n\n        </form>\n    </div>);\n}\n\nexport default FestivalForm;","/Users/stephaniemelo/Documents/GitHub/taller1/src/Utils/GetReviewNum.ts",["74"],"import React from 'react';\nimport { ShortElemObj } from '../Types/ShortElemObj';\n// import  ShortElemObj  from '../Components/App/App';\n\n\nexport function GetReviewNum (review:ShortElemObj[\"review\"]):number{\n\n    const sumReview = review.reduce((prev,curr)=>{return(prev+curr)},0);\n\n    console.log({review : sumReview/review.length})\n    // console.log({reviewType : typeof (sumReview/review.length)})\n    return Math.round((sumReview/review.length) * 100) / 100;\n\n}\n   \n","/Users/stephaniemelo/Documents/GitHub/taller1/src/Components/Header/Links/Links.tsx",["75","76"],"import React from \"react\";\nimport './Links.css'\nimport {\n    Link,\n  } from \"react-router-dom\";\n  \n\n\n  interface Links {\n\n}\n\nconst Links: React.FC<Links> = ({ }) => {\n\n    return( \n       \n            <nav className=\"menu\">\n                <ul className=\"menulist\">\n                    <li className=\"menulistElem\">\n                        <Link className=\"elem\" to=\"/\">Home</Link>\n                    </li>\n                    <li>\n                        <Link className=\"elem\" to=\"/createShortfilms\">Add Short film</Link>\n                    </li>\n                    <li>\n                        <Link className=\"elem\" to=\"/shortfilms\">Short films</Link>\n                    </li>\n                    <li>\n                        <Link className=\"elem\" to=\"/producer\">Producers</Link>\n                    </li>\n                    <li>\n                        <Link className=\"elem\" to=\"/createProducer\">Add Producer</Link>\n                    </li>\n                    <li>\n                        <Link className=\"elem\" to=\"/festivals/0\">Festivals</Link>\n                    </li>\n                    \n                </ul>\n            </nav>\n    \n       \n);\n}\n\n\n\n\n  export default Links; ",{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":6,"column":8,"nodeType":"83","messageId":"84","endLine":6,"endColumn":20},{"ruleId":"81","severity":1,"message":"85","line":11,"column":24,"nodeType":"83","messageId":"84","endLine":11,"endColumn":41},{"ruleId":"81","severity":1,"message":"86","line":14,"column":20,"nodeType":"83","messageId":"84","endLine":14,"endColumn":26},{"ruleId":"87","severity":1,"message":"88","line":192,"column":19,"nodeType":"89","messageId":"90","endLine":194,"endColumn":11},{"ruleId":"91","severity":1,"message":"92","line":10,"column":40,"nodeType":"93","messageId":"94","endLine":10,"endColumn":43},{"ruleId":"81","severity":1,"message":"85","line":2,"column":10,"nodeType":"83","messageId":"84","endLine":2,"endColumn":27},{"ruleId":"81","severity":1,"message":"95","line":146,"column":10,"nodeType":"83","messageId":"84","endLine":146,"endColumn":23},{"ruleId":"81","severity":1,"message":"96","line":2,"column":10,"nodeType":"83","messageId":"84","endLine":2,"endColumn":25},{"ruleId":"81","severity":1,"message":"97","line":21,"column":12,"nodeType":"83","messageId":"84","endLine":21,"endColumn":25},{"ruleId":"81","severity":1,"message":"98","line":4,"column":10,"nodeType":"83","messageId":"84","endLine":4,"endColumn":14},{"ruleId":"81","severity":1,"message":"99","line":7,"column":10,"nodeType":"83","messageId":"84","endLine":7,"endColumn":16},{"ruleId":"81","severity":1,"message":"100","line":65,"column":17,"nodeType":"83","messageId":"84","endLine":65,"endColumn":25},{"ruleId":"81","severity":1,"message":"101","line":13,"column":11,"nodeType":"83","messageId":"84","endLine":13,"endColumn":18},{"ruleId":"81","severity":1,"message":"102","line":29,"column":11,"nodeType":"83","messageId":"84","endLine":29,"endColumn":24},{"ruleId":"81","severity":1,"message":"103","line":1,"column":8,"nodeType":"83","messageId":"84","endLine":1,"endColumn":13},{"ruleId":"104","severity":1,"message":"105","line":13,"column":7,"nodeType":"83","messageId":"106","endLine":13,"endColumn":29},{"ruleId":"91","severity":1,"message":"92","line":13,"column":33,"nodeType":"93","messageId":"94","endLine":13,"endColumn":36},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"@typescript-eslint/no-unused-vars","'FestivalForm' is defined but never used.","Identifier","unusedVar","'ProducerElemProps' is defined but never used.","'Router' is defined but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","JSXText","putCommentInBraces","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'setIsSelected' is defined but never used.","'ShortsElemProps' is defined but never used.","'formSubmitted' is assigned a value but never used.","'Link' is defined but never used.","'useRef' is defined but never used.","'setValue' is assigned a value but never used.","'history' is assigned a value but never used.","'isSeasonValid' is assigned a value but never used.","'React' is defined but never used.","@typescript-eslint/no-redeclare","'Links' is already defined.","redeclared","no-global-assign","no-unsafe-negation"]